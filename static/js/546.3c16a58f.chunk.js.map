{"version":3,"file":"static/js/546.3c16a58f.chunk.js","mappings":"0KACA,G,QAAA,CAAgB,QAAU,2BCA1B,EAAyB,2BAAzB,EAAiE,+B,mBCIpDA,EAAa,SAACC,GACvB,OAAO,gBAAKC,UAAWC,EAAhB,UACH,SAAC,KAAD,CAASC,GAAI,aAAeH,EAAMI,GAAIC,gBAAiBH,EAAvD,SAAsEF,EAAMM,UCNpF,KCGaC,EAAU,SAACP,GACpB,OAAO,gBAAKC,UAAWC,EAAAA,QAAhB,SACFF,EAAMQ,W,uCCDTC,GAAeC,EAAAA,EAAAA,GAAiB,KAoBzBC,GAAsBC,EAAAA,EAAAA,GAA8B,CAACC,KAAM,kBAArCD,EAdZ,SAACZ,GACtB,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,SAACC,EAAA,EAAD,CACIC,UAAWC,EAAAA,EACXZ,KAAM,iBACNa,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAeZ,MAE9B,8C,6BCgBV,GALyBa,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAboB,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GAAD,OAAkCF,GAASG,EAAAA,EAAAA,GAAcD,SAM1EE,EAAAA,EAFqBR,ECxBF,SAACtB,GAMpB,OAAO,iBAAKC,UAAW8B,EAAAA,QAAhB,WACH,gBAAK9B,UAAW8B,EAAAA,YAAhB,SACK/B,EAAMyB,YAAYO,YAAYC,KAAI,SAAAC,GAAC,OAAI,SAACnC,EAAD,CAAuBO,KAAM4B,EAAE5B,KAAMF,GAAI8B,EAAE9B,IAA1B8B,EAAE9B,UAE/D,gBAAKH,UAAW8B,EAAAA,SAAhB,SACK/B,EAAMyB,YAAYU,aAAaF,KAAI,SAAAC,GAAC,OAAI,SAAC3B,EAAD,CAAoBC,QAAS0B,EAAE1B,QAASJ,GAAI8B,EAAE9B,IAAhC8B,EAAE9B,UAE7D,SAACO,EAAD,CAAqBG,SAXH,SAACc,GACnB5B,EAAM2B,YAAYC","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-way/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/addMessageForm/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Yb2w+\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__BPlrI\",\"activeLink\":\"DialogItem_activeLink__m1dYO\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsDataType} from \"../../../Redux/dialogs-reducer\";\r\n\r\nexport const DialogItem = (props: DialogsDataType) => {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={'/messages/' + props.id} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport { MessagesDataType } from \"../../../Redux/dialogs-reducer\";\r\nimport s from './Message.module.css'\r\n\r\nexport const Message = (props: MessagesDataType) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nexport type AddMessageFormType = {\r\n    newMessageText: string\r\n}\r\n\r\nconst AddMessageForm = (props: InjectedFormProps<AddMessageFormType>) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <Field\r\n              component={Textarea}\r\n              name={'newMessageText'}\r\n              placeholder={'Enter your message'}\r\n              validate={[requiredField, maxLength100]}\r\n          />\r\n          <button>Message</button>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm<AddMessageFormType>({form: 'addMessageForm'})(AddMessageForm)","import React from \"react\";\r\nimport {addMessagesAC, DialogsPageType} from \"../../Redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {AddMessageFormType} from \"./addMessageForm/AddMessageForm\";\r\n\r\nexport type DialogsPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\ntype mapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    addMessages: (formData: AddMessageFormType) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        addMessages: (formData: AddMessageFormType) => dispatch(addMessagesAC(formData))\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageFormRedux, AddMessageFormType} from \"./addMessageForm/AddMessageForm\";\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const addNewMessage = (formData: AddMessageFormType) => {\r\n        props.addMessages(formData)\r\n    }\r\n\r\n    return <div className={style.dialogs}>\r\n        <div className={style.dialogsItem}>\r\n            {props.dialogsPage.dialogsData.map(u => <DialogItem key={u.id} name={u.name} id={u.id}/>)}\r\n        </div>\r\n        <div className={style.messages}>\r\n            {props.dialogsPage.messagesData.map(u => <Message key={u.id} message={u.message} id={u.id}/>)}\r\n        </div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n};"],"names":["DialogItem","props","className","s","to","id","activeClassName","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","compose","connect","state","dialogsPage","dispatch","addMessages","formData","addMessagesAC","withAuthRedirect","style","dialogsData","map","u","messagesData"],"sourceRoot":""}